#!/usr/bin/env ruby

require 'rubygems'
require 'game'
require 'optparse'

game = Game.new
timer = 0

# options par défaut
game.music_enabled = true
game.record_enabled = false

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: #$0 [<scenario file>]"

  opts.on("-n", "--no-sound", "Run without sound") do
    game.music_enabled = false
  end

  opts.on("-r", "--record", "Record scenario to stdout") do
    game.record_enabled = true
  end

  opts.on("-h", "--help", "Show this message") do
    puts opts
    exit
  end

end.parse!


# construction du scénario
if ARGV.first
  scenario = File.read(ARGV.first)
  game.scenario = scenario
else #15450
  game.scenario =
  (1..100).map { |i|
      (0..39).map { |x|
        timer += 60
        (22..23).map { |y|
          if y == 22 || (x != 10 && x != 11 && x != 22 && x != 23)
            "#{timer} #{x},#{y} brick"
          elsif x == 10 || x == 23
            "#{timer} #{x},15 brick"
          else
            "#{timer} #{x},18 bonus"
          end
        }
      }
    }.join("\n")
    puts timer
=begin
# scénario qui ne contient qu'une brique
    (1..200).map { |i|
      timer += 100
      kind = 'brick'
      "#{timer} 10,10 #{kind}"
    }.join("\n")
# scenario assez alléatoire
    ((1..12).map { |x|
      (1..14).map { |y|
        timer += 100
        kind = rand(2) == 1 ? 'brick' : 'bonus'
        "#{timer} #{x},#{y} #{kind}"
      }
    } +
    (1..100).map { |i|
      timer += 100
      kind = rand(2) == 1 ? 'brick' : 'bonus'
      "#{timer} #{rand 30},#{rand 25} #{kind}"
    }).join("\n")
=end
end
  
# boucle principale
game.start
while not game.end?
  game.update
end

